{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Client Advocacy Library - Content Catalog \u00b6 Catalog of existing Client, ISV and Partner Developer Advocacy content and media. See the complete list of workshops per content group here . Content Groups \u00b6 Predict Cloud Native DevOps Secure Automate Migrate Platform Z","title":"About the workshop"},{"location":"#client-advocacy-library-content-catalog","text":"Catalog of existing Client, ISV and Partner Developer Advocacy content and media. See the complete list of workshops per content group here .","title":"Client Advocacy Library - Content Catalog"},{"location":"#content-groups","text":"Predict Cloud Native DevOps Secure Automate Migrate Platform Z","title":"Content Groups"},{"location":"content-catalog/","text":"Client Advocacy Library - Content Catalog \u00b6 Predict \u00b6 aka Data & AI Cloud Pak for Data (CP4Data) \u00b6 Python and Analytics , current version: Python3 work with dataframes python-pandas Titanic data set Natural language understanding Credit Risk Workshop : Data Connection and Virtualization Importing Data Data Virtualization and Data Refinery Data Governance with Watson Knowledge Catalog - for Users Data Governance with Watson Knowledge Catalog - for Admins Machine learning with AutoAI Machine learning with Jupyter notebooks Machine learning - deployment, scoringm, and use in an application Monitoring Models with OpenScale - Auto Setup Monitoring Models with OpenScale - using APIs with Jupyter notebook Health Care Workshop : Data Connection and Virtualization Importing Data Data Virtualization and Data Refinery Data Governance with Watson Knowledge Catalog - for Admins Machine learning with AutoAI Monitoring Models with OpenScale - Auto Setup Telco Workshop : Data Connection and Virtualization Git Integration Importing Data ETL with Datastage Data Virtualization and Data Refinery Data Governance with Watson Knowledge Catalog - for Users Data Governance with Watson Knowledge Catalog - for Admins Machine learning with AutoAI Machine learning with Jupyter notebooks Machine learning - deployment, scoring, and use in an application Monitoring Models with OpenScale - Auto Setup Monitoring Models with OpenScale - using APIs with Jupyter notebook Cloud Native \u00b6 (AppMod1) Application Modernization 1 \u00b6 Containers 101 Kubernetes 101 Helm 101 Networking 101 Istio 101 Kubernetes Storage 101 Jenkins 101 (AppMod2) Application Modernization 2 \u00b6 Config Management for Kubernetes 101, API Management, Documentation and Security using API Connect Message Streams using Apache Kafka Operators of Go type using Operator SDK Operators from Helm Charts using Operator SDK (KubeStor1) Kubernetes Storage 1 \u00b6 Kubernetes Persistent Storage - (video playlist) Container Storage Kubernetes Storage 101 - (video) StateFulSets File Storage Block Storage - (video) Object Storage using S3FS-Fuse Using External Storage and Operators - (video) Software Defined Storage (SDS) FUSE and S3FS-Fuse for Object Storage - (video) DevOps \u00b6 (DevOps1) DevOps 101 \u00b6 Docker Build Source-to-Image (S2I) Build Pipeline Build using Jenkins Tekton 101 Jenkins 101 Infrastructure-as-Code (IaC) using Ansible and AWX CodeReady Workspaces and Odo Security \u00b6 (DevSecOps1) Secure DevOps 1 \u00b6 Static Application Security Testing (SAST) using SonarQube Secure Build Pipelines using Tekton, Harbor and Clair Encrypted Config Management using Vault Monitoring Container Runtime using Sysdig Falco (KubeSec1) Kubernetes Security 1 \u00b6 Static Application Security Testing (SAST) with SonarQube Vulnerability Scanning Presentation: Container Security (link to be added) OpenShift RBAC using SecurityContextConstraints (SCC) API Security and Lifecycle Management with API Connect Kubernetes Logging 101 using LogDNA , Kubernetes Monitoring 101 with Sysdig Monitor , (KubeNet1) Kubernetes Networking 1 \u00b6 Kubernetes Networking - (video playlist) Kubernetes Networking 101 - (video) Secure Networking using Project Calico Securing Routes on OpenShift Secure a Cluster using Virtual Private Cloud (VPC) - (video) Integration \u00b6 (CP4I) Cloud Pak for Integration \u00b6 API Connect Integrate with SalesForce using AppConnect Traces with CP4I Message Streams using Apache Kafka","title":"Catalog"},{"location":"content-catalog/#client-advocacy-library-content-catalog","text":"","title":"Client Advocacy Library - Content Catalog"},{"location":"content-catalog/#predict","text":"aka Data & AI","title":"Predict"},{"location":"content-catalog/#cloud-pak-for-data-cp4data","text":"Python and Analytics , current version: Python3 work with dataframes python-pandas Titanic data set Natural language understanding Credit Risk Workshop : Data Connection and Virtualization Importing Data Data Virtualization and Data Refinery Data Governance with Watson Knowledge Catalog - for Users Data Governance with Watson Knowledge Catalog - for Admins Machine learning with AutoAI Machine learning with Jupyter notebooks Machine learning - deployment, scoringm, and use in an application Monitoring Models with OpenScale - Auto Setup Monitoring Models with OpenScale - using APIs with Jupyter notebook Health Care Workshop : Data Connection and Virtualization Importing Data Data Virtualization and Data Refinery Data Governance with Watson Knowledge Catalog - for Admins Machine learning with AutoAI Monitoring Models with OpenScale - Auto Setup Telco Workshop : Data Connection and Virtualization Git Integration Importing Data ETL with Datastage Data Virtualization and Data Refinery Data Governance with Watson Knowledge Catalog - for Users Data Governance with Watson Knowledge Catalog - for Admins Machine learning with AutoAI Machine learning with Jupyter notebooks Machine learning - deployment, scoring, and use in an application Monitoring Models with OpenScale - Auto Setup Monitoring Models with OpenScale - using APIs with Jupyter notebook","title":"Cloud Pak for Data (CP4Data)"},{"location":"content-catalog/#cloud-native","text":"","title":"Cloud Native"},{"location":"content-catalog/#appmod1-application-modernization-1","text":"Containers 101 Kubernetes 101 Helm 101 Networking 101 Istio 101 Kubernetes Storage 101 Jenkins 101","title":"(AppMod1) Application Modernization 1"},{"location":"content-catalog/#appmod2-application-modernization-2","text":"Config Management for Kubernetes 101, API Management, Documentation and Security using API Connect Message Streams using Apache Kafka Operators of Go type using Operator SDK Operators from Helm Charts using Operator SDK","title":"(AppMod2) Application Modernization 2"},{"location":"content-catalog/#kubestor1-kubernetes-storage-1","text":"Kubernetes Persistent Storage - (video playlist) Container Storage Kubernetes Storage 101 - (video) StateFulSets File Storage Block Storage - (video) Object Storage using S3FS-Fuse Using External Storage and Operators - (video) Software Defined Storage (SDS) FUSE and S3FS-Fuse for Object Storage - (video)","title":"(KubeStor1) Kubernetes Storage 1"},{"location":"content-catalog/#devops","text":"","title":"DevOps"},{"location":"content-catalog/#devops1-devops-101","text":"Docker Build Source-to-Image (S2I) Build Pipeline Build using Jenkins Tekton 101 Jenkins 101 Infrastructure-as-Code (IaC) using Ansible and AWX CodeReady Workspaces and Odo","title":"(DevOps1) DevOps 101"},{"location":"content-catalog/#security","text":"","title":"Security"},{"location":"content-catalog/#devsecops1-secure-devops-1","text":"Static Application Security Testing (SAST) using SonarQube Secure Build Pipelines using Tekton, Harbor and Clair Encrypted Config Management using Vault Monitoring Container Runtime using Sysdig Falco","title":"(DevSecOps1) Secure DevOps 1"},{"location":"content-catalog/#kubesec1-kubernetes-security-1","text":"Static Application Security Testing (SAST) with SonarQube Vulnerability Scanning Presentation: Container Security (link to be added) OpenShift RBAC using SecurityContextConstraints (SCC) API Security and Lifecycle Management with API Connect Kubernetes Logging 101 using LogDNA , Kubernetes Monitoring 101 with Sysdig Monitor ,","title":"(KubeSec1) Kubernetes Security 1"},{"location":"content-catalog/#kubenet1-kubernetes-networking-1","text":"Kubernetes Networking - (video playlist) Kubernetes Networking 101 - (video) Secure Networking using Project Calico Securing Routes on OpenShift Secure a Cluster using Virtual Private Cloud (VPC) - (video)","title":"(KubeNet1) Kubernetes Networking 1"},{"location":"content-catalog/#integration","text":"","title":"Integration"},{"location":"content-catalog/#cp4i-cloud-pak-for-integration","text":"API Connect Integrate with SalesForce using AppConnect Traces with CP4I Message Streams using Apache Kafka","title":"(CP4I) Cloud Pak for Integration"},{"location":"catalog/","text":"Catalog Automation \u00b6 create-catalog.go --includeCG \"Data and AI\",\"Cloud Native\" --name catalog-rbs catalog-rbs.md Directory Structure \u00b6 + catalog/ |- README.md |- catalog.json |---+ labs/ |- <lab-name>.json |- <lab-name>.json |- etc Contains the following: catalog.json file, main configuration file for catalog with Content Groups or Squads matching Github labels starting with Squad : and Learning Paths matching Github labels starting with Learning Path : . labs directory, containing configuration files for individual labs, referencing details in the README.md of the respective Github repository or repository subdirectory. Branches, versions are maintained following Github standards. catalog.json \u00b6 The catalog file below had two learning paths: Application Modernization 1 and Application Modernization 2 , with in order the labs it contains, referencing lab details in the relative file paths. { \"ContentGroups\" : [ { \"Cloud Native\" : [ { \"Application Modernization 1\" : [ \"labs/containers101.json\" , \"labs/kube101.json\" , \"labs/helm101.json\" , \"labs/istio101.json\" , \"labs/storage-lab1.json\" , \"labs/kube-networking101.json\" , \"labs/logging-monitoring101.json\" , \"labs/jenkins101.json\" ], \"version\" : \"0.1.0\" , \"last_updated\" : \"2021-03-01\" }, { \"Application Modernization 2\" : [ \"labs/crw-odo.json\" , \"labs/kube-config-management.json\" , \"labs/scc-rbac-sa-openshift.json\" , \"labs/vpcgen2.json\" , \"labs/apic101.json\" , \"labs/apache-kafka.json\" , \"labs/operators-helm.json\" , \"labs/cos-s3fs-fuse.json\" ] }, { \"Unassigned\" : [ \"labs/new-lab.json\" ] } ], \"Unassigned\" : [] } ] } lab101.json \u00b6 { \"title\" : \"Container Storage\" , \"duration\" : \"60 minutes\" , \"repo\" : \"https://github.com/IBM/docker101\" , \"subdir\" : \"docs/lab3\" } Templates \u00b6 content-new-lab-template.md Notes \u00b6 Considerations: Require a repo to be refactored and comply to directory structure, e.g. https://github.com/IBM/kubernetes-networking/tree/master/docs is too granular with a root level files per segment, https://github.ibm.com/IBM-DEG/ClientAdvocacy/issues/1303 Other directories like this https://github.com/IBM/kube101/tree/master/docs do not easily let themselver be refactored, cause they're so self-contained at repo level. Looking at https://github.com/IBM/jenkins101 with lab-01 and lab-02, require a short description. Where should a summary/description of the lab be pulled from? Require a file in the repo? Require a lab config file in repo instead of in this catalog/labs directory? What to do with unlinked workshops that are added to a Learning Path but which are TBD or unknown what URL they are located at? E.g. AppMod2 \"API Management, Documentation and Security with APIC\", \"Message Streams with Apache Kafka\" The operators labs dont have a subdir but have a single MD file This repo has a Istio101 which consists of a sub-selection of the root level markdown files: https://github.com/IBM/istio101/tree/master/docs { \"title\" : \"Istio 101\" , \"duration\" : \"60 minutes\" , \"repo\" : \"https://github.com/IBM/istio101\" , \"subdir\" : \"docs/mtls\" , \"sections\" : [ { \"mTLS\" : \"docs/mtls\" }, { \"Observe service telemetry: metrics and tracing\" : \"docs/exercise-4\" }, { \"Expose the service mesh with the Istio Ingress Gateway\" : \"docs/exercise-5\" }, { \"Perform traffic management\" : \"docs/exercise-6\" }, { \"Secure your service mesh\" : \"docs/exercise-7\" } ] }","title":"Catalog Automation"},{"location":"catalog/#catalog-automation","text":"create-catalog.go --includeCG \"Data and AI\",\"Cloud Native\" --name catalog-rbs catalog-rbs.md","title":"Catalog Automation"},{"location":"catalog/#directory-structure","text":"+ catalog/ |- README.md |- catalog.json |---+ labs/ |- <lab-name>.json |- <lab-name>.json |- etc Contains the following: catalog.json file, main configuration file for catalog with Content Groups or Squads matching Github labels starting with Squad : and Learning Paths matching Github labels starting with Learning Path : . labs directory, containing configuration files for individual labs, referencing details in the README.md of the respective Github repository or repository subdirectory. Branches, versions are maintained following Github standards.","title":"Directory Structure"},{"location":"catalog/#catalogjson","text":"The catalog file below had two learning paths: Application Modernization 1 and Application Modernization 2 , with in order the labs it contains, referencing lab details in the relative file paths. { \"ContentGroups\" : [ { \"Cloud Native\" : [ { \"Application Modernization 1\" : [ \"labs/containers101.json\" , \"labs/kube101.json\" , \"labs/helm101.json\" , \"labs/istio101.json\" , \"labs/storage-lab1.json\" , \"labs/kube-networking101.json\" , \"labs/logging-monitoring101.json\" , \"labs/jenkins101.json\" ], \"version\" : \"0.1.0\" , \"last_updated\" : \"2021-03-01\" }, { \"Application Modernization 2\" : [ \"labs/crw-odo.json\" , \"labs/kube-config-management.json\" , \"labs/scc-rbac-sa-openshift.json\" , \"labs/vpcgen2.json\" , \"labs/apic101.json\" , \"labs/apache-kafka.json\" , \"labs/operators-helm.json\" , \"labs/cos-s3fs-fuse.json\" ] }, { \"Unassigned\" : [ \"labs/new-lab.json\" ] } ], \"Unassigned\" : [] } ] }","title":"catalog.json"},{"location":"catalog/#lab101json","text":"{ \"title\" : \"Container Storage\" , \"duration\" : \"60 minutes\" , \"repo\" : \"https://github.com/IBM/docker101\" , \"subdir\" : \"docs/lab3\" }","title":"lab101.json"},{"location":"catalog/#templates","text":"content-new-lab-template.md","title":"Templates"},{"location":"catalog/#notes","text":"Considerations: Require a repo to be refactored and comply to directory structure, e.g. https://github.com/IBM/kubernetes-networking/tree/master/docs is too granular with a root level files per segment, https://github.ibm.com/IBM-DEG/ClientAdvocacy/issues/1303 Other directories like this https://github.com/IBM/kube101/tree/master/docs do not easily let themselver be refactored, cause they're so self-contained at repo level. Looking at https://github.com/IBM/jenkins101 with lab-01 and lab-02, require a short description. Where should a summary/description of the lab be pulled from? Require a file in the repo? Require a lab config file in repo instead of in this catalog/labs directory? What to do with unlinked workshops that are added to a Learning Path but which are TBD or unknown what URL they are located at? E.g. AppMod2 \"API Management, Documentation and Security with APIC\", \"Message Streams with Apache Kafka\" The operators labs dont have a subdir but have a single MD file This repo has a Istio101 which consists of a sub-selection of the root level markdown files: https://github.com/IBM/istio101/tree/master/docs { \"title\" : \"Istio 101\" , \"duration\" : \"60 minutes\" , \"repo\" : \"https://github.com/IBM/istio101\" , \"subdir\" : \"docs/mtls\" , \"sections\" : [ { \"mTLS\" : \"docs/mtls\" }, { \"Observe service telemetry: metrics and tracing\" : \"docs/exercise-4\" }, { \"Expose the service mesh with the Istio Ingress Gateway\" : \"docs/exercise-5\" }, { \"Perform traffic management\" : \"docs/exercise-6\" }, { \"Secure your service mesh\" : \"docs/exercise-7\" } ] }","title":"Notes"},{"location":"references/CONTRIBUTORS/","text":"Contacts \u00b6 Submit Engagement Request Jonathan Collins , Program Director, Digital & Client Developer Advocacy Predict Omid Meh Scott D'Angelo Javier Torres Cloud Native Remko de Knikker Lijing Zhang DevOps Oliver Rodriguez Secure Remko de Knikker Automate John Zaccone Migrate Rojan Jose Platform Z Matt Cousens","title":"Contributors"},{"location":"references/CONTRIBUTORS/#contacts","text":"Submit Engagement Request Jonathan Collins , Program Director, Digital & Client Developer Advocacy Predict Omid Meh Scott D'Angelo Javier Torres Cloud Native Remko de Knikker Lijing Zhang DevOps Oliver Rodriguez Secure Remko de Knikker Automate John Zaccone Migrate Rojan Jose Platform Z Matt Cousens","title":"Contacts"}]}